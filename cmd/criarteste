function show_loading() {
    local pid=$!
    local delay=0.2
    local spinchars="/-\|"
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        for char in ${spinchars}; do
            echo -ne "\r$char Please wait..."
            sleep $delay
        done
    done
    echo -ne "\rDone!          "
}

# Ensure necessary directories and files exist with proper permissions


ensure_file() {
    local file=$1
    if [ ! -f "$file" ]; then
        touch "$file"
    fi
    chmod u+rw "$file"
    show_loading
}

# Ensure necessary directories and files exist with read and write permissions

ensure_file "/root/Lock-User.txt"
ensure_file "/root/Traffic.txt"
ensure_file "/root/AETeam.txt"

# Check if the file Trafic-server.sh exists
if [ ! -f "/root/Trafic-server.sh" ]; then
    # Create the Trafic-server.sh file
# Create the Trafic-server.sh file
cat > /root/Trafic-server.sh << EOF
#!/bin/bash

# Run vnstat and capture its output
TODAY_INFO=\$(vnstat)
arrTODAY=(\$TODAY_INFO)

# Extract relevant information
rx="\${arrTODAY[72]} \${arrTODAY[73]}"
tx="\${arrTODAY[75]} \${arrTODAY[76]}"
total="\${arrTODAY[78]} \${arrTODAY[79]}"
date=\$(date +"%d/%m/%Y %H:%M:%S")

# Create the output string
output="====================\\n"
output+="DOWNLOAD: \$rx\\nUPLOAD: \$tx\\nTOTAL: \$total\\nDATE: \$date\\n"
output+="===================="

# Define the file path
file_path="/root/Traffic.txt"

# Append the output to the file
echo -e "\$output" >> "\$file_path"

echo "Traffic information appended to \$file_path"
EOF

    # Make Trafic-server.sh executable
    chmod +x /root/Trafic-server.sh

    # Display loading animation while creating the Trafic-server.sh file
    show_loading
fi
echo "Files and code checked and created successfully."
###########################################################  Lock/Unlock USERS  ############################################################
function lock_user() {
    read -p "Enter username: " username
    check_user_exist=$(grep -w $username /etc/passwd | cut -d: -f1)
    if [[ $check_user_exist == $username ]]; then
        chage -E 0 $username
        echo "$username locked successfully!"
        echo "$username" >> /root/Lock-User.txt
    else
        echo "$username not found. Please try again."
    fi
}

function unlock_user() {
    read -p "Enter username: " username
    check_user_exist=$(grep -w $username /etc/passwd | cut -d: -f1)
    if [[ $check_user_exist == $username ]]; then
        chage -E -1 $username
        echo "$username unlocked successfully!"
        sed -i "/$username/d" /root/Lock-User.txt
    else
        echo "$username not found. Please try again."
    fi
}

function show_locked_users() {
    if [ -f "/root/Lock-User.txt" ]; then
        echo "Locked users:"
        cat /root/Lock-User.txt
    else
        echo "No locked users found."
    fi
}
###########################################################     TRAFFIC-SERVER     ############################################################
function install_traffic_script() {
    # Check if the script is already installed
    if grep -q "Traffic-Installed" "/root/AETeam.txt"; then
        echo -e "\033[0;31mTraffic script is already installed!\033[0m"
        return
    fi

    # Check if the cron job is already set up
    if crontab -l | grep -q "/root/Trafic-server.sh"; then
        echo -e "\033[0;31mCron job is already set up!\033[0m"
    else
        # Run the script once
        /root/Trafic-server.sh

        # Add cron job for daily execution
        (crontab -l ; echo "59 23 * * * /root/Trafic-server.sh") | crontab -

        echo -e "Cron job set up."
    fi
    
    # Edit AETeam.txt to indicate script installation
    echo "Traffic-Installed" > /root/AETeam.txt
    
    echo -e "Traffic script installed and AETeam.txt updated."
}
function show_traffic_info() {
    if [ -f "/root/Traffic.txt" ]; then
        file_contents=$(cat /root/Traffic.txt)
        if [ -z "$file_contents" ]; then
            echo "The script is not installed. Install the script first."
        else
            echo "Traffic Information:"
            echo "$file_contents"
        fi
    else
        echo "The script is not installed. Install the script first."
    fi
 }


function create_report() {
    if [ -f "/root/Traffic.txt" ]; then
        file_contents=$(cat /root/Traffic.txt)
        if [ -z "$file_contents" ]; then
            echo "The script is not installed. Install the script first."
        else
            # Redirect all output to a temporary file
            exec 3>&1 4>&2
            exec 1>/dev/null 2>&1

            zip_file_path="/var/www/html/TrafficReport.zip"
            zip "$zip_file_path" "/root/Traffic.txt"

            # Restore output
            exec 1>&3 2>&4
            echo "Report created successfully."

            server_ip=$(hostname -I | awk '{print $1}')  # Replace with your server's IP
            download_link="http://$server_ip:81/TrafficReport.zip"
            echo "Download link: $download_link"
        fi
    else
        echo "The script is not installed. Install the script first."
    fi
}

function remove_traffic_script() {
    # Check if the script is installed
    if grep -q "Traffic-Installed" "/root/AETeam.txt"; then
        # Remove cron job
        crontab -l | grep -v "/root/Trafic-server.sh" | crontab -

        # Remove first line of AETeam.txt
        sed -i '/Traffic-Installed/d' /root/AETeam.txt

        # Remove content of Traffic.txt
        echo -n > /root/Traffic.txt

        echo -e "Traffic script and related settings have been removed."
    else
        echo -e "\033[0;31mTraffic script is not installed!\033[0m"
    fi
}
  ###########################################################          MENU          ############################################################

    clear
    echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
    echo -e "\033[41m \033[37m        ⇱ SSH PLUS MANAGER - IRAN AETEAM ⇲        \033[0m"
    echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
    echo ""
    echo -e "\033[1;33m           AETeam Options           \033[0m"
    echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
#################################################  LOCK/UNLOCK USERS  ##################################################
    echo -e "\033[0;31m===========   «\033[1;31mLock/Unlock USERS\033[0;31m»   ============\033[0m"
    echo -e "\033[1;32m [1] \033[1;31m• \033[1;33mLock User\033[0m"
    echo -e "\033[1;32m [2] \033[1;31m• \033[1;33mUnlock User\033[0m"
    echo -e "\033[1;32m [3] \033[1;31m• \033[1;33mShow locked users\033[0m"
    #################################################   TRAFFIC  SERVER   ##################################################
    echo -e "\033[0;31m===========   «\033[1;31mTRAFFIC  SERVER\033[0;31m»   ============\033[0m"
    if grep -q "Traffic-Installed" "/root/AETeam.txt"; then
    echo -e "\033[1;32m [4] \033[1;31m• \033[1;33mInstall Traffic Script (\033[0;31mInstalled\033[0;33m)\033[0m"
    else
    echo -e "\033[1;32m [4] \033[1;31m• \033[1;33mInstall Traffic Script\033[0m"
    fi
    echo -e "\033[1;32m [5] \033[1;31m• \033[1;33mShow Traffic Information\033[0m"
    echo -e "\033[1;32m [6] \033[1;31m• \033[1;33mCreate Report (ZIP)\033[0m"
    echo -e "\033[1;32m [7] \033[1;31m• \033[1;33mRemove Traffic Script\033[0m"
#################################################   SPEED UP SERVER   ##################################################
    echo -e "\033[0;31m===========   «\033[1;31mSPEED UP SERVER\033[0;31m»   ============\033[0m"
    echo -e "\033[1;32m [X] \033[1;31m• \033[1;33mXXXXXXXXXX\033[0m"
    echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
    echo -e "\033[1;32m [7] \033[1;31m• \033[1;33mExit\033[0m"
    echo ""
    echo ""
    echo -ne "\033[1;32mWHAT DO YOU WANT TO DO\033[1;31m ?\033[1;37m : "; read  option

    case $option in
    1) lock_user ;;
    2) unlock_user ;;
    3) show_locked_users ;;
    4) install_traffic_script ;;
    5) show_traffic_info ;;
    6) create_report ;;
    7) remove_traffic_script ;;
    8) exit ;;
    *) echo "Invalid option. Please try again." ;;
    esac 
